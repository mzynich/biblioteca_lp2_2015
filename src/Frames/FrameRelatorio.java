/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frames;

import banco.ConnectionFactory;
import java.io.InputStream;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import model.ItemLivro;
import net.sf.jasperreports.engine.JRException;
import util.ReportUtils;
import util.Validador;

/**
 *
 * @author mzynich
 */
public class FrameRelatorio extends javax.swing.JFrame {

    /**
     * Creates new form FrameRelatorio
     */
    public FrameRelatorio() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jRadioButton5 = new javax.swing.JRadioButton();
        jRadioButton6 = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Menu Relatórios");
        setResizable(false);

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setText("Detalhes de um livro");

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("Livros disponíveis");

        buttonGroup1.add(jRadioButton3);
        jRadioButton3.setText("Livros mais retirados");

        buttonGroup1.add(jRadioButton4);
        jRadioButton4.setText("Clientes que mais retiraram um livro");

        buttonGroup1.add(jRadioButton5);
        jRadioButton5.setText("Clientes que mais atrasaram");

        buttonGroup1.add(jRadioButton6);
        jRadioButton6.setText("Todos os empréstimos");

        jButton1.setText("Cancelar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Confirmar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton6)
                    .addComponent(jRadioButton5)
                    .addComponent(jRadioButton3)
                    .addComponent(jRadioButton2)
                    .addComponent(jRadioButton1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jButton1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2))
                        .addComponent(jRadioButton4)))
                .addGap(0, 9, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jRadioButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRadioButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRadioButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRadioButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRadioButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRadioButton6)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (jRadioButton1.isSelected()) {
            abrirRelatorioDetalhesLivro();
        } else {
            if (jRadioButton2.isSelected()) {
                abrirRelatorioLivrosDisponiveis();
            } else {
                if (jRadioButton3.isSelected()) {
                    abrirRelatorioLivrosMaisRetirados();
                } else {
                    if (jRadioButton4.isSelected()) {
                        abrirRelatorioClientesMaisRetiraramLivro();
                    } else {
                        if (jRadioButton5.isSelected()) {
                            abrirRelatorioClientesMaisAtrasaram();
                        } else {
                            if (jRadioButton6.isSelected()) {
                                abrirRelatorioEmprestimos();
                            } else {
                                JOptionPane.showMessageDialog(null, "Selecione uma opção", "Erro", JOptionPane.ERROR_MESSAGE);
                            }
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    public void abrirRelatorioEmprestimos() {

        /*
         * Obtendo o arquivo do relatório.
         * Note que estamos utilizando um InputStream para obter o arquivo que
         * está dentro do nosso projeto. Fazendo isso, não teremos problema
         * quando nosso projeto for empacotado em um .jar.
         *
         * Note que o caminho do .jasper inicia com /, ou seja, a raiz da
         * localização das classes compiladas do nosso projeto
         * (o pacote default).
         *
         * Utilize a aba Files (canto superior esquerdo) e veja que os arquivos
         * .jasper e .jrxml são copiados para o diretório /build/classes
         * e por consequencia para o .jar que for criado.
         *
         * Se não os estiver vendo, mande dar um Clean and Build no projeto
         * (botão direito no nó raiz do projeto, Clean and Build (Limpar e Construir)
         *
         */
        InputStream inputStream = getClass().getResourceAsStream("/Reports/TodosEmprestimos.jasper");

        // mapa de parâmetros do relatório (ainda vamos aprender a usar)
        Map parametros = new HashMap();

        try {

            // abre o relatório
            ReportUtils.openReport("Empréstimos", inputStream, parametros,
                    ConnectionFactory.getConnection());

        } catch (JRException exc) {
            exc.printStackTrace();
        }

    }

    public void abrirRelatorioClientesMaisAtrasaram() {

        /*
         * Obtendo o arquivo do relatório.
         * Note que estamos utilizando um InputStream para obter o arquivo que
         * está dentro do nosso projeto. Fazendo isso, não teremos problema
         * quando nosso projeto for empacotado em um .jar.
         *
         * Note que o caminho do .jasper inicia com /, ou seja, a raiz da
         * localização das classes compiladas do nosso projeto
         * (o pacote default).
         *
         * Utilize a aba Files (canto superior esquerdo) e veja que os arquivos
         * .jasper e .jrxml são copiados para o diretório /build/classes
         * e por consequencia para o .jar que for criado.
         *
         * Se não os estiver vendo, mande dar um Clean and Build no projeto
         * (botão direito no nó raiz do projeto, Clean and Build (Limpar e Construir)
         *
         */
        InputStream inputStream = getClass().getResourceAsStream("/Reports/ClientesMaisAtrasaram.jasper");

        // mapa de parâmetros do relatório (ainda vamos aprender a usar)
        Map parametros = new HashMap();

        try {

            // abre o relatório
            ReportUtils.openReport("Clientes que mais atrasaram", inputStream, parametros,
                    ConnectionFactory.getConnection());

        } catch (JRException exc) {
            exc.printStackTrace();
        }

    }
    
    public void abrirRelatorioLivrosDisponiveis() {

        /*
         * Obtendo o arquivo do relatório.
         * Note que estamos utilizando um InputStream para obter o arquivo que
         * está dentro do nosso projeto. Fazendo isso, não teremos problema
         * quando nosso projeto for empacotado em um .jar.
         *
         * Note que o caminho do .jasper inicia com /, ou seja, a raiz da
         * localização das classes compiladas do nosso projeto
         * (o pacote default).
         *
         * Utilize a aba Files (canto superior esquerdo) e veja que os arquivos
         * .jasper e .jrxml são copiados para o diretório /build/classes
         * e por consequencia para o .jar que for criado.
         *
         * Se não os estiver vendo, mande dar um Clean and Build no projeto
         * (botão direito no nó raiz do projeto, Clean and Build (Limpar e Construir)
         *
         */
        InputStream inputStream = getClass().getResourceAsStream("/Reports/LivrosDisponiveis.jasper");

        // mapa de parâmetros do relatório (ainda vamos aprender a usar)
        Map parametros = new HashMap();

        try {

            // abre o relatório
            ReportUtils.openReport("Livros disponíveis", inputStream, parametros,
                    ConnectionFactory.getConnection());

        } catch (JRException exc) {
            exc.printStackTrace();
        }

    }

    public void abrirRelatorioDetalhesLivro() {

        String isbn = JOptionPane.showInputDialog("ISBN do livro");
        if (isbn != null && Validador.ISBNValido(isbn)) {
            ItemLivro item = new servico.ServicoItemLivro().pesquisaItemLivroISBN(isbn);
            if (item != null) {

                /*
                 * Obtendo o arquivo do relatório.
                 * Note que estamos utilizando um InputStream para obter o arquivo que
                 * está dentro do nosso projeto. Fazendo isso, não teremos problema
                 * quando nosso projeto for empacotado em um .jar.
                 *
                 * Note que o caminho do .jasper inicia com /, ou seja, a raiz da
                 * localização das classes compiladas do nosso projeto
                 * (o pacote default).
                 *
                 * Utilize a aba Files (canto superior esquerdo) e veja que os arquivos
                 * .jasper e .jrxml são copiados para o diretório /build/classes
                 * e por consequencia para o .jar que for criado.
                 *
                 * Se não os estiver vendo, mande dar um Clean and Build no projeto
                 * (botão direito no nó raiz do projeto, Clean and Build (Limpar e Construir)
                 *
                 */
                InputStream inputStream = getClass().getResourceAsStream("/Reports/DetalhesLivro.jasper");

                // mapa de parâmetros do relatório (ainda vamos aprender a usar)
                Map parametros = new HashMap();
                parametros.put("isbn", item.getLivro().getISBN());

                try {

                    // abre o relatório
                    ReportUtils.openReport("Detalhes de um livro", inputStream, parametros,
                            ConnectionFactory.getConnection());

                } catch (JRException exc) {
                    exc.printStackTrace();
                }
            } else {
                JOptionPane.showMessageDialog(null, "Livro não encontrado", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    public void abrirRelatorioLivrosMaisRetirados() {

        /*
         * Obtendo o arquivo do relatório.
         * Note que estamos utilizando um InputStream para obter o arquivo que
         * está dentro do nosso projeto. Fazendo isso, não teremos problema
         * quando nosso projeto for empacotado em um .jar.
         *
         * Note que o caminho do .jasper inicia com /, ou seja, a raiz da
         * localização das classes compiladas do nosso projeto
         * (o pacote default).
         *
         * Utilize a aba Files (canto superior esquerdo) e veja que os arquivos
         * .jasper e .jrxml são copiados para o diretório /build/classes
         * e por consequencia para o .jar que for criado.
         *
         * Se não os estiver vendo, mande dar um Clean and Build no projeto
         * (botão direito no nó raiz do projeto, Clean and Build (Limpar e Construir)
         *
         */
        InputStream inputStream = getClass().getResourceAsStream("/Reports/LivrosMaisRetirados.jasper");

        // mapa de parâmetros do relatório (ainda vamos aprender a usar)
        Map parametros = new HashMap();

        try {

            // abre o relatório
            ReportUtils.openReport("Livros mais retirados", inputStream, parametros,
                    ConnectionFactory.getConnection());

        } catch (JRException exc) {
            exc.printStackTrace();
        }

    }
    
    public void abrirRelatorioClientesMaisRetiraramLivro() {

        String isbn = JOptionPane.showInputDialog("ISBN do livro");
        if (isbn != null && Validador.ISBNValido(isbn)) {
            ItemLivro item = new servico.ServicoItemLivro().pesquisaItemLivroISBN(isbn);
            if (item != null) {

                /*
                 * Obtendo o arquivo do relatório.
                 * Note que estamos utilizando um InputStream para obter o arquivo que
                 * está dentro do nosso projeto. Fazendo isso, não teremos problema
                 * quando nosso projeto for empacotado em um .jar.
                 *
                 * Note que o caminho do .jasper inicia com /, ou seja, a raiz da
                 * localização das classes compiladas do nosso projeto
                 * (o pacote default).
                 *
                 * Utilize a aba Files (canto superior esquerdo) e veja que os arquivos
                 * .jasper e .jrxml são copiados para o diretório /build/classes
                 * e por consequencia para o .jar que for criado.
                 *
                 * Se não os estiver vendo, mande dar um Clean and Build no projeto
                 * (botão direito no nó raiz do projeto, Clean and Build (Limpar e Construir)
                 *
                 */
                InputStream inputStream = getClass().getResourceAsStream("/Reports/ClientesMaisRetiraramLivro.jasper");

                // mapa de parâmetros do relatório (ainda vamos aprender a usar)
                Map parametros = new HashMap();
                parametros.put("isbn", item.getLivro().getISBN());

                try {

                    // abre o relatório
                    ReportUtils.openReport("Detalhes de um livro", inputStream, parametros,
                            ConnectionFactory.getConnection());

                } catch (JRException exc) {
                    exc.printStackTrace();
                }
            } else {
                JOptionPane.showMessageDialog(null, "Livro não encontrado", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameRelatorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameRelatorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameRelatorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameRelatorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameRelatorio().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JRadioButton jRadioButton6;
    // End of variables declaration//GEN-END:variables
}
